{"version":3,"sources":["components/PokemonList.js","components/Pagination.js","App.js","index.js"],"names":["PokemonList","pokemon","useState","inputValue","setInputValue","filteredPokemon","filter","p","toLowerCase","includes","className","type","placeholder","value","onChange","e","target","length","map","Pagination","goToNextPage","goToPrevPage","onClick","App","setPokemon","currenPageUrl","setCurrenPageUrl","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","loading","setLoading","useEffect","cancle","axios","get","cancelToken","CancelToken","c","then","res","data","results","name","next","previous","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAEe,SAASA,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QAElC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEIC,EAAkBJ,EAAQK,QAAQ,SAACC,GAAD,OAClCA,EAAEC,cAAcC,SAASN,MAG/B,OACE,eAAC,WAAD,WACE,sBAAKO,UAAU,OAAf,UACE,uBACEA,UAAU,aACVC,KAAK,OACLC,YAAY,oBACZC,MAAQV,EACRW,SAAY,SAACC,GAAD,OAAOX,EAAcW,EAAEC,OAAOH,UAE5C,oBAAIH,UAAU,YAAd,SAA2BP,GAAU,UAAOE,EAAgBY,OAAvB,sBAGtCZ,EAAgBa,KAAI,SAACX,GAAD,OACnB,4BAAYA,GAAJA,SCtBD,SAASY,EAAT,GAAmD,IAA9BC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,aAC9C,OACI,gCACKA,GAAgB,wBAAQX,UAAU,yBAAyBY,QAAWD,EAAtD,kBAChBD,GAAgB,wBAAQV,UAAU,uBAAuBY,QAAWF,EAApD,qBCqDdG,MArDf,WAEE,MAA8BrB,mBAAS,IAAvC,mBAAOD,EAAP,KAAgBuB,EAAhB,KACA,EAA0CtB,mBAAS,sCAAnD,mBAAOuB,EAAP,KAAsBC,EAAtB,KACA,EAAsCxB,qBAAtC,mBAAOyB,EAAP,KAAoBC,EAApB,KACA,EAAsC1B,qBAAtC,mBAAO2B,EAAP,KAAoBC,EAApB,KACA,EAA8B5B,oBAAS,GAAvC,mBAAO6B,EAAP,KAAgBC,EAAhB,KAyBA,SAASZ,IACPM,EAAiBC,GAGnB,SAASN,IACPK,EAAiBG,GAKnB,OAjCAI,qBAAU,WAGR,IAAIC,EAaJ,OAfAF,GAAW,GAIXG,IAAMC,IAAIX,EAAe,CACvBY,YAAa,IAAIF,IAAMG,aAAY,SAAAC,GAAC,OAAIL,EAASK,OAGlDC,MAAM,SAAAC,GACLT,GAAW,GACXR,EAAWiB,EAAIC,KAAKC,QAAQzB,KAAI,SAAAX,GAAC,OAAIA,EAAEqC,SACvChB,EAAea,EAAIC,KAAKG,MACxBf,EAAeW,EAAIC,KAAKI,aAGnB,kBAAMZ,OAEZ,CAACT,IAeDM,EAAgB,aAGjB,sBAAKrB,UAAU,YAAf,UACE,qDACA,cAACS,EAAD,CAAYC,aAAgBO,EAAcP,EAAc,KAAMC,aAAeQ,EAAcR,EAAc,OACzG,cAACrB,EAAD,CAAaC,QAAWA,IACxB,cAACkB,EAAD,CAAYC,aAAgBO,EAAcP,EAAc,KAAMC,aAAeQ,EAAcR,EAAc,WChD/G0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c62b18a9.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\r\n\r\nexport default function PokemonList({ pokemon }) {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    let filteredPokemon = pokemon.filter( (p) => (\r\n        p.toLowerCase().includes(inputValue)\r\n    ))\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"my-4\">\r\n        <input\r\n          className=\"w-100 p-2 \"\r\n          type=\"text\"\r\n          placeholder=\"search pokemon...\"\r\n          value= {inputValue}\r\n          onChange = {(e) => setInputValue(e.target.value)}\r\n        />\r\n        <h6 className=\"float-end\">{inputValue && `${filteredPokemon.length} result found`}</h6>\r\n      </div>\r\n\r\n      {filteredPokemon.map((p) => (\r\n        <p key={p}>{p}</p>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Pagination({goToNextPage, goToPrevPage}) {\r\n    return (\r\n        <div>\r\n            {goToPrevPage && <button className=\"me-3 my-3 btn btn-info\" onClick = {goToPrevPage}>Prev</button>}\r\n            {goToNextPage && <button className=\"my-3 btn btn-primary\" onClick = {goToNextPage}>Next</button>}\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from \"react\";\nimport axios from \"axios\"\n\nimport PokemonList from \"./components/PokemonList\";\nimport Pagination from \"./components/Pagination\";\n\nfunction App() {\n\n  const [pokemon, setPokemon] = useState([]);\n  const [currenPageUrl, setCurrenPageUrl] = useState(\"https://pokeapi.co/api/v2/ability/\");\n  const [nextPageUrl, setNextPageUrl] = useState();\n  const [prevPageUrl, setPrevPageUrl] = useState();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true)\n\n    let cancle;\n\n    axios.get(currenPageUrl, {\n      cancelToken: new axios.CancelToken(c => cancle = c)\n    })\n\n    .then( res => {\n      setLoading(false)\n      setPokemon(res.data.results.map(p => p.name))\n      setNextPageUrl(res.data.next)\n      setPrevPageUrl(res.data.previous)\n    })\n\n    return () => cancle()\n\n  }, [currenPageUrl]);\n\n\n  // Pagination \n\n  function goToNextPage(){\n    setCurrenPageUrl(nextPageUrl)\n  }\n\n  function goToPrevPage(){\n    setCurrenPageUrl(prevPageUrl)\n  }\n\n\n\n  if(loading) return \"Loading...\"\n\n  return (\n    <div className=\"container\">\n      <h1>List of All Pokemon</h1>\n      <Pagination goToNextPage = {nextPageUrl ? goToNextPage: null} goToPrevPage= {prevPageUrl ? goToPrevPage: null} />\n      <PokemonList pokemon = {pokemon} />\n      <Pagination goToNextPage = {nextPageUrl ? goToNextPage: null} goToPrevPage= {prevPageUrl ? goToPrevPage: null} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}